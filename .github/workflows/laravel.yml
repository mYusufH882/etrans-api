name: Laravel

on:
  push:
    branches: ["master"]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: etrans
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_pgsql, pgsql

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Set Environment Variables
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=etrans" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env      
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Generate Token JWT Auth
        run: php artisan jwt:secret --force
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Wait for PostgreSQL to be ready
        run: |
          while ! pg_isready -h 127.0.0.1 -p 5432 > /dev/null 2>&1; do
            sleep 1
          done
      - name: Create Database
        run: |
          php artisan migrate --force
          php artisan db:seed --class=UserSeeder
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        run: php artisan test
      - name: Deploy to VPS
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd /home/yusufprog/apps/etrans-api
            git pull origin master
            git status

            docker-compose exec php chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache
            docker-compose exec php chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache

            docker-compose exec php php artisan config:cache
            docker-compose exec php php artisan route:cache
            docker-compose exec php php artisan view:cache
            
            docker-compose down
            docker-compose up -d
